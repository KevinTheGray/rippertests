// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSAttributedString;
@class UIImage;
@class NSCoder;

SWIFT_CLASS("_TtC5KitUI5Toast")
@interface Toast : UIView
@property (nonatomic, readonly, copy) NSString * _Nullable configurationKey;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
@property (nonatomic, readonly, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic, readonly, strong) UIImage * _Nullable icon;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable userInfo;
@property (nonatomic, readonly) SWIFT_METATYPE(Toast) _Null_unspecified toastClass;
@property (nonatomic) BOOL needsToAddConstraints;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)configureConstraints;
- (void)resetConstraintsCheck;
@property (nonatomic, readonly, strong) UIView * _Nonnull contentView;
@property (nonatomic, readonly, strong) UIView * _Nonnull actionContentView;
- (void)preparingToShow;
- (void)preparingToHide;
@end

@class UILabel;
@class UIImageView;

SWIFT_CLASS("_TtC5KitUI11BannerToast")
@interface BannerToast : Toast
@property (nonatomic, readonly) double TOAST_SPACING_OUTER_H;
@property (nonatomic, readonly) double TOAST_SPACING_OUTER_V;
@property (nonatomic, readonly) double TOAST_SPACING_INNER;
@property (nonatomic, readonly) double TOAST_DISMISS_BUTTON_W;
@property (nonatomic, readonly) double TOAST_DEFAULT_MAX_H;
@property (nonatomic, readonly) double TOAST_STATUS_ADJUST_H;
@property (nonatomic, readonly, strong) UILabel * _Nonnull textLabel;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imageView;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)configureConstraints;
- (CGSize)optimalSizeWithParentFrame:(CGRect)parentFrame;
- (CGSize)optimalSizeWithParentFrame:(CGRect)parentFrame maxWidth:(double)maxWidth includeButton:(BOOL)includeButton;
@end

@class UIColor;
@class UIEvent;

SWIFT_CLASS("_TtC5KitUI8Tappable")
@interface Tappable : UIControl
@property (nonatomic) UIEdgeInsets hitAreaInsets;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setBackgroundColorWithColor:(UIColor * _Nullable)color forState:(UIControlState)state;
- (UIColor * _Nullable)backgroundColorForState:(UIControlState)state;
- (void)updateTappableStyleForState:(UIControlState)forState;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC5KitUI6Button")
@interface Button : Tappable
@property (nonatomic) double cornerRadius;
@property (nonatomic) BOOL hasInitialized;
@property (nonatomic) CGSize imageSize;
@property (nonatomic) double imageSpacing;
@property (nonatomic) UIEdgeInsets titleAdjustmentInsets;
@property (nonatomic) UIEdgeInsets imageAdjustmentInsets;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, strong) UILabel * _Nonnull titleLabel;
@property (nonatomic, strong) UIImageView * _Nonnull imageView;
- (void)setTitleWithTitle:(NSString * _Nonnull)title forState:(UIControlState)state;
- (NSString * _Nullable)titleForState:(UIControlState)state;
- (void)setAttributedTitleWithTitle:(NSAttributedString * _Nonnull)title forState:(UIControlState)state;
- (NSAttributedString * _Nullable)attributedTitleForState:(UIControlState)state;
- (void)setTitleColorWithColor:(UIColor * _Nullable)color forState:(UIControlState)state;
- (UIColor * _Nullable)titleColorForState:(UIControlState)state;
- (void)setBackgroundColorWithColor:(UIColor * _Nullable)color forState:(UIControlState)state;
- (void)setImageWithImage:(UIImage * _Nullable)image forState:(UIControlState)state;
- (UIImage * _Nullable)imageForState:(UIControlState)state;
- (void)resetAllAttributes;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (CGSize)sizeThatFits:(CGSize)size;
- (CGSize)intrinsicContentSize;
- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize;
- (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize withHorizontalFittingPriority:(UILayoutPriority)horizontalFittingPriority verticalFittingPriority:(UILayoutPriority)verticalFittingPriority;
@end


SWIFT_CLASS("_TtC5KitUI17CenteredTitleView")
@interface CenteredTitleView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UILabel * _Nonnull titleLabel;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC5KitUI8Checkbox")
@interface Checkbox : UIControl
+ (double)RadiusCircle;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)setBackgroundColorWithColor:(UIColor * _Nullable)color forState:(UIControlState)state;
- (UIColor * _Nullable)backgroundColorForState:(UIControlState)state;
- (void)setCheckColorWithColor:(UIColor * _Nullable)color forState:(UIControlState)state;
- (UIColor * _Nullable)checkColorForState:(UIControlState)state;
- (void)setBorderColorWithColor:(UIColor * _Nullable)color forState:(UIControlState)state;
- (UIColor * _Nullable)borderColorForState:(UIControlState)state;
@end

@class UIBezierPath;

SWIFT_CLASS("_TtC5KitUI20CircularProgressView")
@interface CircularProgressView : UIView
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic) double lineWidth;
@property (nonatomic, strong) UIColor * _Nonnull progressColor;
@property (nonatomic, strong) UIColor * _Nonnull trackColor;
@property (nonatomic) NSTimeInterval progressAnimationDuration;
@property (nonatomic) NSTimeInterval spinnerAnimationDuration;
@property (nonatomic, copy) NSString * _Nonnull spinnerTimingFunction;
- (nonnull instancetype)initWithFrame:(CGRect)frame lineWidth:(double)lineWidth progressColor:(UIColor * _Nonnull)progressColor;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)setProgressWithProgress:(double)progress animated:(BOOL)animated;
- (void)setProgressWithProgress:(double)progress animated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
- (void)configureTrackLayer;
- (void)configureTrackLayerAt:(double)progress;
- (void)configureProgressLayer;
- (void)configureProgressLayerAt:(double)progress;
- (UIBezierPath * _Nonnull)pathForTrackAt:(double)progress;
- (UIBezierPath * _Nonnull)pathForProgressAmount:(double)progress;
- (void)startAnimatingWithRestart:(BOOL)restart;
- (void)stopAnimating;
@end

@class UIWindow;

SWIFT_CLASS("_TtC5KitUI24KeyboardLayoutConstraint")
@interface KeyboardLayoutConstraint : NSLayoutConstraint
@property (nonatomic, strong) UIWindow * _Nullable keyWindow;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithKeyWindow:(UIWindow * _Nonnull)keyWindow;
+ (KeyboardLayoutConstraint * _Nonnull)layoutForView:(UIView * _Nonnull)view keyWindow:(UIWindow * _Nullable)keyWindow;
+ (KeyboardLayoutConstraint * _Nonnull)layoutForView:(UIView * _Nonnull)view bottomOffset:(CGFloat)bottomOffset keyWindow:(UIWindow * _Nullable)keyWindow;
- (void)registerNotifications;
- (void)willShowKeyboard:(id _Nullable)sender;
- (void)willHideKeyboard:(id _Nullable)sender;
@end

@class UITapGestureRecognizer;
@class UIViewController;

SWIFT_CLASS("_TtC5KitUI12ModalManager")
@interface ModalManager : NSObject
@property (nonatomic, strong) UIView * _Nonnull overlayView;
@property (nonatomic, strong) UITapGestureRecognizer * _Nonnull overlayTapRecognizer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)setKeyWindow:(UIWindow * _Nonnull)window;
+ (ModalManager * _Nonnull)manager;
- (BOOL)isShowingModal;
- (void)present:(UIViewController * _Nonnull)viewController;
- (void)present:(UIViewController * _Nonnull)viewController animated:(BOOL)animated callback:(void (^ _Nullable)(void))callback;
- (void)dismiss;
- (void)dismissWithAnimated:(BOOL)animated;
- (void)dismissTo:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (void)dismissTo:(UIViewController * _Nonnull)viewController animated:(BOOL)animated callback:(void (^ _Nullable)(void))callback;
- (void)dismissAllWithAnimated:(BOOL)animated;
- (void)willShowKeyboard:(id _Nullable)sender;
- (void)willHideKeyboard:(id _Nullable)sender;
- (void)tappedOverlay:(id _Null_unspecified)sender;
@end

@class UICollectionViewLayout;

SWIFT_CLASS("_TtC5KitUI20PagingCollectionView")
@interface PagingCollectionView : UICollectionView
@property (nonatomic) CGFloat pagingThreshold;
@property (nonatomic) BOOL isDataPagingEnabled;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSString *, id> * _Nullable)change context:(void * _Null_unspecified)context;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITouch;

SWIFT_CLASS("_TtC5KitUI10PopupToast")
@interface PopupToast : BannerToast
- (void)layoutSubviews;
- (CGSize)optimalSizeWithParentFrame:(CGRect)parentFrame;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIFont;
@class TabItem;

SWIFT_CLASS("_TtC5KitUI6TabBar")
@interface TabBar : UIView
@property (nonatomic, strong) UIFont * _Nonnull tabFont;
@property (nonatomic, strong) UIColor * _Nullable tabColor;
@property (nonatomic, strong) UIColor * _Nullable tabHighlightedColor;
@property (nonatomic, strong) UIColor * _Nullable tabSelectedColor;
@property (nonatomic, strong) UIColor * _Nullable tabTextColor;
@property (nonatomic, strong) UIColor * _Nullable tabTextSelectedColor;
@property (nonatomic, strong) UIColor * _Nullable tabTextHighlightedColor;
@property (nonatomic) CGSize tabIconSize;
@property (nonatomic) UIEdgeInsets tabIconInsets;
@property (nonatomic, strong) UIColor * _Nullable indicatorColor;
@property (nonatomic) BOOL indicatorSizedToText;
@property (nonatomic) float indicatorHeight;
@property (nonatomic) UIEdgeInsets indicatorMargins;
@property (nonatomic) BOOL animateIndicatorPosition;
@property (nonatomic) NSInteger selectedIndex;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (TabItem * _Nonnull)addTabItemWithTabItem:(TabItem * _Nonnull)tabItem;
- (TabItem * _Nonnull)addTabItemWithTabItem:(TabItem * _Nonnull)tabItem index:(NSInteger)index;
- (void)updateTabItemWithIndex:(NSInteger)index text:(NSString * _Nullable)text;
- (void)updateTabItemWithIndex:(NSInteger)index image:(UIImage * _Nullable)image selectedImage:(UIImage * _Nullable)selectedImage;
- (void)updateTabItemAtIndex:(NSInteger)index text:(NSString * _Nullable)text image:(UIImage * _Nullable)image selectedImage:(UIImage * _Nullable)selectedImage;
- (void)removeTabItemAtIndex:(NSInteger)index;
- (void)setTabItemValues:(TabItem * _Nonnull)tabItem text:(NSString * _Nullable)text image:(UIImage * _Nullable)image selectedImage:(UIImage * _Nullable)selectedImage;
- (void)layoutSubviews;
- (void)tappedTabButton:(id _Nullable)sender;
@end


SWIFT_CLASS("_TtC5KitUI7TabItem")
@interface TabItem : Button
@property (nonatomic) BOOL isStyled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




@interface UIColor (SWIFT_EXTENSION(KitUI))
- (nonnull instancetype)initWithHex:(NSInteger)hex alpha:(float)alpha;
- (UIColor * _Nonnull)complementaryColor;
- (UIColor * _Nonnull)blackOrWhiteContrastColor;
- (UIColor * _Nonnull)adjustBrightness:(float)amount;
- (UIColor * _Nonnull)adjustAlpha:(float)alpha;
- (NSString * _Nonnull)toHEX;
@end


@interface UIFont (SWIFT_EXTENSION(KitUI))
- (CGSize)sizeOfString:(NSString * _Nonnull)string constrainedToWidth:(double)maxWidth lineCount:(NSInteger)numLines;
- (CGSize)sizeOfString:(NSString * _Nonnull)string constrainedToSize:(CGSize)maxSize;
@end


@interface UIImage (SWIFT_EXTENSION(KitUI))
- (nullable instancetype)initWithNamed:(NSString * _Nonnull)name tintColor:(UIColor * _Nonnull)tintColor;
- (UIImage * _Nullable)kittintWithColor:(UIColor * _Nonnull)color;
- (UIImage * _Nullable)kittintWithColor:(UIColor * _Nonnull)color alpha:(double)alpha;
- (UIImage * _Nullable)kitscaleWithLongestSide:(double)longestSide;
- (UIImage * _Nullable)kitscaleWithLongestSide:(double)longestSide scaleUp:(BOOL)scaleUp;
- (UIImage * _Nullable)kitscaleWithPercentage:(double)percentage;
- (UIImage * _Nullable)kitscaleWithSize:(CGSize)size;
- (UIImage * _Nullable)kitscaleWithSize:(CGSize)size scaleUp:(BOOL)scaleUp;
@end


@interface UIViewController (SWIFT_EXTENSION(KitUI))
- (void)presentModal:(UIViewController * _Nonnull)viewController;
- (void)dismissModal;
- (void)dismissModalWithAnimated:(BOOL)animated;
- (void)dismissModalWithAnimated:(BOOL)animated callback:(void (^ _Nullable)(void))callback;
- (void)dismissAllModals;
@end

#pragma clang diagnostic pop
